#
# Sample Abaqus environment file for Abaqus 2016 or newer.
#

import sys
import os

usub_lib_dir = os.path.join(os.getcwd(), '../for')

if sys.platform.startswith('linux'):

    compile_fortran = ['ifort', '-free', '-mkl=sequential', '-DABQ_LNX86_64',
                       '-axCORE-AVX2', '-xSSE3',
                       '-V', '-c', '-fPIC', '-auto', '-mP2OPT_hpo_vec_divbyzero=F', '-extend_source',
                       '-fpp', '-WB', '-I%I']

elif sys.platform == 'win32':

    compile_fortran = ['ifort', '/free', '/Qmkl:sequential',
                       '/c','/DABQ_WIN86_64', '/extend-source', '/fpp',
                       '/iface:cref', '/recursive', '/Qauto-scalar',
                       '/QxSSE3', '/QaxAVX',
                       '/heap-arrays:1',
                       '/Od', '/Ob0',  # <-- Optimization Debugging
                       # '/Zi',          # <-- Debugging
                       #'/gen-interfaces', '/warn:interfaces', '/check', '/fpe:0', # <-- Debugging
                       '/include:%I']


# Check for uncommmited changes For development; not needed for production. To
# use, uncomment and be sure to set the compdam_source_dir to the absolute path
# to the CompDam directory. This function only applies to code compiled from
# source during the job execution; not compatible with pre-compiled libraries.
# def onJobStartup():
#   import os, sys, subprocess

#   # !!! UPDATE to point to compdam source directory !!!
#   compdam_source_dir = os.path.join(savedir, os.pardir, os.pardir)

#   # Platform dependent stuff
#   if sys.platform.startswith('linux'):
#     chain_command_char = '; '
#   elif sys.platform == 'win32':
#     chain_command_char = '& '
#   else:
#     print('Skipping check for uncommmited changes.')
#     return

#   # Get the current hash
#   cmd = 'cd ' + compdam_source_dir + chain_command_char + 'git rev-parse --verify HEAD'
#   githash = subprocess.check_output(cmd, shell=True)

#   # Check for changes to compdam
#   cmd = 'cd ' + compdam_source_dir + chain_command_char + 'git diff for/'
#   gitdiff = subprocess.check_output(cmd, shell=True)
#   if len(gitdiff):
#     print('\nWARNING: Found uncommmited changes to compdam source; see ' + id + '.diff\n')

#     with open(os.path.join(savedir,id+'.diff'), 'w') as f:
#       f.write('Last commit: ' + githash+'\n\n')
#       f.write(gitdiff+'\n\n')
#   else:
#     print('Checked for uncommmited changes; none found.')
